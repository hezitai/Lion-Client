{"remainingRequest":"/Users/hezitai/Desktop/LionApp/lion-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/LionApp/lion-app/src/components/index.vue?vue&type=template&id=47323bf2&","dependencies":[{"path":"/Users/hezitai/Desktop/LionApp/lion-app/src/components/index.vue","mtime":1607569485341},{"path":"/Users/hezitai/Desktop/LionApp/lion-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/LionApp/lion-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/LionApp/lion-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/LionApp/lion-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}